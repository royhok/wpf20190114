<Window x:Class="CustomElementBinding.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:CustomElementBinding" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:src="clr-namespace:CustomElementBinding" Title="MainWindow" Width="800" Height="450" mc:Ignorable="d">
    <StackPanel>
        <!--
            처음 스크롤바는 MyElement의 Number 프로퍼티와 OneWayToSource
            바인딩을 하므로 스크롤바의 값이 바뀌면 MyElement의 Number 속성도 바뀐다. 이때
            아래쪽은 두번째 스크롤바의 Value 프로퍼티와 MyElement가 TwoWay로 바인딩
            되었으므로 두번째 스크롤바도 같이 움직인다.
        -->
        <ScrollBar Margin="24" LargeChange="10" Maximum="100" Orientation="Horizontal" SmallChange="1"
                   Value="{Binding ElementName=simple, Path=Number, Mode=OneWayToSource}" />
        <!--
            x:Name 속성은 FrameworkElement를 성속받지 않은 XAML 엘리먼트를 위한
            속성이다. MyElement가 동일 어셈블리상이므로 Name대신 x:Name사용
        -->
        <src:MyElement x:Name="simple" HorizontalAlignment="Center" />
        <!--
            두번째 스크롤바를 움직이면 MyElement의 Number 속성도 바뀌지만
            이 값이 바뀐다고 이것이 첫번째 스크롤바와는 바인딩 되지 않으므로
            첫번째 스크롤바는 그대로 있다.
        -->
        <ScrollBar Name="scroll" Margin="24" LargeChange="10" Maximum="100" Orientation="Horizontal" SmallChange="1"
                   Value="{Binding ElementName=simple, Path=Number, Mode=TwoWay}" />
        <src:MyElement HorizontalAlignment="Center" Number="{Binding ElementName=scroll, Path=Value, Mode=OneWay}" />
    </StackPanel>

</Window>
